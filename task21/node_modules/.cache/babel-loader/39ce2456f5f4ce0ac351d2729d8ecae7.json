{"ast":null,"code":"import _regeneratorRuntime from \"f:\\\\work\\\\IT\\\\JScourses\\\\task21\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectWithoutProperties from \"f:\\\\work\\\\IT\\\\JScourses\\\\task21\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _asyncToGenerator from \"f:\\\\work\\\\IT\\\\JScourses\\\\task21\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"f:\\\\work\\\\IT\\\\JScourses\\\\task21\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"f:\\\\work\\\\IT\\\\JScourses\\\\task21\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"f:\\\\work\\\\IT\\\\JScourses\\\\task21\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"f:\\\\work\\\\IT\\\\JScourses\\\\task21\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"f:\\\\work\\\\IT\\\\JScourses\\\\task21\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"f:\\\\work\\\\IT\\\\JScourses\\\\task21\\\\src\\\\App.js\";\nimport React from 'react';\nimport { OrderList } from \"./components/OrderList\";\nimport { Pizza } from './components/Pizza';\nimport ParticipantsService from './services/participants.js';\nimport OrderService from './services/order.js';\nimport \"./styles.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.clickLoadButton = function () {\n      _this.setState({\n        isWaitingData: true,\n        isLoadSuccessful: false\n      });\n\n      _this.loadParticipantsData().then(function (order) {\n        var participants = order.participants,\n            who_eats_pizza = order.who_eats_pizza,\n            prices = order.prices,\n            pizzaType = order.pizzaType;\n\n        _this.setState({\n          isWaitingData: false,\n          isLoadSuccessful: true,\n          allParticipants: participants,\n          who_eats_pizza: who_eats_pizza,\n          totalOrderPrice: prices.fullCost,\n          pizzaType: pizzaType,\n          moneyToShare: prices.costPizza,\n          moneyForDrinks: prices.costCola\n        });\n      }).catch(function (error) {\n        _this.setState({\n          isWaitingData: false\n        });\n\n        console.error(error.message);\n      });\n    };\n\n    _this.loadParticipantsData =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var participants, eaters, vegans, pizzas, response, _this$calculateOrder, who_eats_pizza, pizzaType, prices;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return ParticipantsService.getParticipants();\n\n            case 2:\n              participants = _context.sent;\n\n              _this.setState({\n                allParticipants: participants\n              });\n\n              _this.setState({\n                who_eats_pizza: participants.filter(function (item) {\n                  if (item.eatsPizza) return item;\n                }).map(function (item) {\n                  return item.name;\n                })\n              });\n\n              _context.next = 7;\n              return ParticipantsService.getDietParticipants(_this.state.who_eats_pizza);\n\n            case 7:\n              eaters = _context.sent;\n              vegans = eaters.filter(function (x) {\n                return x.isVegan;\n              }).map(function (x) {\n                return x.name;\n              });\n\n              _this.setState({\n                vegans: vegans\n              });\n\n              pizzas = {\n                vegansNumber: vegans.length,\n                pizzaEatersNumber: _this.state.who_eats_pizza.length\n              };\n              _context.next = 13;\n              return Promise.all([OrderService.getPizzaOrder(pizzas), OrderService.getColaOrder(participants.length), OrderService.getCurrencies()]);\n\n            case 13:\n              response = _context.sent;\n\n              _this.setState({\n                pizza: response[0],\n                cola: response[1],\n                currencies: response[2]\n              });\n\n              _this$calculateOrder = _this.calculateOrder(), who_eats_pizza = _this$calculateOrder.who_eats_pizza, pizzaType = _this$calculateOrder.pizzaType, prices = _objectWithoutProperties(_this$calculateOrder, [\"who_eats_pizza\", \"pizzaType\"]);\n\n              _this.setState({\n                isWaitingData: false,\n                isLoaded: true\n              });\n\n              return _context.abrupt(\"return\", {\n                who_eats_pizza: who_eats_pizza,\n                participants: participants,\n                prices: prices,\n                pizzaType: pizzaType\n              });\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.calculateOrder = function () {\n      var pizzaPrice = _this.state.pizza.price.split(' ');\n\n      var drinksPrice = _this.state.cola.price.split(' ');\n\n      var costPizza = Math.ceil(parseFloat(pizzaPrice[0]) * _this.state.currencies[pizzaPrice[1]] / _this.state.allParticipants.length * 10) / 10;\n      var costCola = Math.ceil(parseFloat(drinksPrice[0]) * _this.state.currencies[drinksPrice[1]] / _this.state.who_eats_pizza.length * 10) / 10;\n      var fullCost = costPizza * _this.state.who_eats_pizza.length + costCola * _this.state.allParticipants.length;\n\n      var who_eats_pizza = _this.state.who_eats_pizza.map(function (name, index) {\n        var isVegan = false;\n        if (_this.state.vegans.indexOf(name) !== -1) isVegan = true;\n        return {\n          name: name,\n          money: costPizza,\n          id: index,\n          isVegan: isVegan\n        };\n      });\n\n      return {\n        who_eats_pizza: who_eats_pizza,\n        costPizza: costPizza,\n        costCola: costCola,\n        fullCost: fullCost,\n        pizzaType: _this.state.pizza.type\n      };\n    };\n\n    _this.payMoney = function (id) {\n      var money;\n\n      _this.setState({\n        money: _this.state.who_eats_pizza.map(function (x) {\n          if (x.id === id) {\n            money = x.money;\n            x.money = 0;\n          }\n\n          return x;\n        }),\n        paidMoney: _this.state.paidMoney + money,\n        balanceMoney: _this.state.balanceMoney - money\n      });\n\n      if (Math.abs(_this.state.balanceMoney - money < 0.1)) _this.setState({\n        balanceMoney: 0\n      });\n    };\n\n    _this.state = {\n      isWaitingData: false,\n      isLoadSuccessful: false,\n      allParticipants: [],\n      who_eats_pizza: [],\n      cola: {},\n      pizza: {},\n      currencies: {}\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"load-btn\",\n        onClick: function onClick() {\n          return _this2.clickLoadButton();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"click\")), this.state.isWaitingData && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Waiting...\"), !this.state.isWaitingData && this.state.isLoadSuccessful && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Pizza, {\n        countEaters: this.state.who_eats_pizza.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(OrderList, {\n        className: \"pizzaOrderList\",\n        payMoney: this.payMoney,\n        who_eats_pizza: this.state.who_eats_pizza,\n        money: {\n          balanceMoney: Math.floor(10 * this.state.balanceMoney) / 10,\n          moneyToShare: this.state.moneyToShare,\n          totalOrder: Math.floor(10 * this.state.totalOrder) / 10,\n          paidMoney: Math.floor(10 * this.state.paidMoney) / 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["f:\\work\\IT\\JScourses\\task21\\src\\App.js"],"names":["React","OrderList","Pizza","ParticipantsService","OrderService","App","props","clickLoadButton","setState","isWaitingData","isLoadSuccessful","loadParticipantsData","then","order","participants","who_eats_pizza","prices","pizzaType","allParticipants","totalOrderPrice","fullCost","moneyToShare","costPizza","moneyForDrinks","costCola","catch","error","console","message","getParticipants","filter","item","eatsPizza","map","name","getDietParticipants","state","eaters","vegans","x","isVegan","pizzas","vegansNumber","length","pizzaEatersNumber","Promise","all","getPizzaOrder","getColaOrder","getCurrencies","response","pizza","cola","currencies","calculateOrder","isLoaded","pizzaPrice","price","split","drinksPrice","Math","ceil","parseFloat","index","indexOf","money","id","type","payMoney","paidMoney","balanceMoney","abs","floor","totalOrder","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {OrderList} from \"./components/OrderList\";\r\nimport {Pizza} from './components/Pizza';\r\nimport ParticipantsService from './services/participants.js'\r\nimport OrderService from './services/order.js'\r\nimport \"./styles.css\";\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isWaitingData: false,\r\n            isLoadSuccessful: false,\r\n            allParticipants: [],\r\n            who_eats_pizza: [],\r\n            cola: {},\r\n            pizza: {},\r\n            currencies: {}\r\n        };\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div>\r\n                    <button className=\"load-btn\" onClick={() => this.clickLoadButton()}>\r\n                       click\r\n                    </button>\r\n                </div>\r\n                {this.state.isWaitingData && <p>Waiting...</p>}\r\n                {!this.state.isWaitingData && this.state.isLoadSuccessful && <React.Fragment>\r\n                    <Pizza countEaters={this.state.who_eats_pizza.length}/>\r\n                    <OrderList\r\n                        className=\"pizzaOrderList\"\r\n                        payMoney={this.payMoney}\r\n                        who_eats_pizza={this.state.who_eats_pizza}\r\n                        money={{\r\n                            balanceMoney: Math.floor(10 * this.state.balanceMoney) / 10,\r\n                            moneyToShare: this.state.moneyToShare,\r\n                            totalOrder: Math.floor(10 * this.state.totalOrder) / 10,\r\n                            paidMoney: Math.floor(10 * this.state.paidMoney) / 10\r\n                        }}></OrderList>\r\n\r\n                </React.Fragment>}\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    clickLoadButton = () => {\r\n        this.setState({\r\n            isWaitingData: true,\r\n            isLoadSuccessful: false,\r\n        });\r\n\r\n        this.loadParticipantsData().then((order) => {\r\n            const {participants, who_eats_pizza, prices, pizzaType} = order;\r\n            this.setState({\r\n                isWaitingData: false,\r\n                isLoadSuccessful: true,\r\n                allParticipants: participants,\r\n                who_eats_pizza: who_eats_pizza,\r\n                totalOrderPrice: prices.fullCost,\r\n                pizzaType: pizzaType,\r\n                moneyToShare: prices.costPizza,\r\n                moneyForDrinks: prices.costCola\r\n            });\r\n        }).catch(error=>{\r\n            this.setState({\r\n                isWaitingData: false\r\n            });\r\n            console.error(error.message)});\r\n\r\n    };\r\n\r\n    loadParticipantsData = async () => {\r\n        let participants = await ParticipantsService.getParticipants();\r\n        this.setState({allParticipants:participants});\r\n        this.setState({\r\n            who_eats_pizza: participants\r\n                .filter(item => { if (item.eatsPizza) return item;})\r\n                .map(item => {  return item.name;})\r\n        });\r\n\r\n        const eaters = await ParticipantsService.getDietParticipants(this.state.who_eats_pizza);\r\n        let vegans = eaters\r\n            .filter(x => { return x.isVegan; })\r\n            .map(x => x.name);\r\n        this.setState({ vegans: vegans});\r\n        let pizzas = {\r\n                vegansNumber: vegans.length,\r\n                pizzaEatersNumber: this.state.who_eats_pizza.length};\r\n\r\n\r\n        const response = await Promise.all([\r\n            OrderService.getPizzaOrder(pizzas),\r\n            OrderService.getColaOrder(participants.length),\r\n            OrderService.getCurrencies()\r\n        ]);\r\n\r\n        this.setState({  pizza: response[0], cola: response[1], currencies: response[2] });\r\n        const {who_eats_pizza,pizzaType, ...prices} =  this.calculateOrder();\r\n        this.setState({\r\n            isWaitingData: false,\r\n            isLoaded: true\r\n        });\r\n\r\n        return {\r\n            who_eats_pizza,\r\n            participants,\r\n            prices,\r\n            pizzaType\r\n        }\r\n\r\n    };\r\n\r\n    calculateOrder= () =>  {\r\n        let pizzaPrice = this.state.pizza.price.split(' ');\r\n        let drinksPrice = this.state.cola.price.split(' ');\r\n\r\n        const costPizza =  Math.ceil(parseFloat(pizzaPrice[0]) *  this.state.currencies[pizzaPrice[1]] / this.state.allParticipants.length * 10) / 10;\r\n        const costCola =   Math.ceil(parseFloat(drinksPrice[0]) *  this.state.currencies[drinksPrice[1]] /  this.state.who_eats_pizza.length * 10) / 10;\r\n        const fullCost = (costPizza * this.state.who_eats_pizza.length) + (costCola *  this.state.allParticipants.length);\r\n        const who_eats_pizza = this.state.who_eats_pizza.map((name, index) => {\r\n            let isVegan = false;\r\n            if (this.state.vegans.indexOf(name) !== -1) isVegan = true;\r\n            return {\r\n                name: name,\r\n                money: costPizza,\r\n                id: index,\r\n                isVegan: isVegan\r\n            };\r\n        });\r\n        return {\r\n            who_eats_pizza ,\r\n            costPizza,\r\n            costCola,\r\n            fullCost,\r\n            pizzaType:  this.state.pizza.type\r\n        };\r\n    };\r\n\r\n\r\n    payMoney = id => {\r\n        let money;\r\n        this.setState({\r\n            money: this.state.who_eats_pizza .map(x => {\r\n                if (x.id === id) { money = x.money;\r\n                    x.money = 0; }\r\n                return x;\r\n            }),\r\n            paidMoney: this.state.paidMoney + money,\r\n            balanceMoney: this.state.balanceMoney - money\r\n        });\r\n        if (Math.abs(this.state.balanceMoney - money < 0.1))\r\n            this.setState({balanceMoney: 0});\r\n    };\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}